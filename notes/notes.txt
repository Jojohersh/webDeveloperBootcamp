body-parser:
bodyParser = require("body-parser");
app.use(bodyParser.urlencoded({extended:true});
req.body.WHATEVER

express-sanitizer:
//removes bad input such as script tags
expressSanitizer = require("express-sanitizer");
app.use(expressSanitizer()); //MUST BE USED AFTER BODY PARSER IS USED
req.body.THING.TO.CLEAN = req.sanitize(req.body.THING.TO.CLEAN);
Mongo:
"show dbs" shows the available dbs in mongo
"use *db*" switches current db in use to *db*
"show collections" lists collections in the db
"db.collection.find({})" shows item
"db.collection.drop()" destroys everything in a collection

mongoose:

deprecation fixes:
mongoose.set('useNewUrlParser', true);
mongoose.set('useUnifiedTopology', true);
mongoose.set('useFindAndModify', false);

// use deleteOne or deleteMany in place of remove()

mongoose.connect("mongodb://ADDRESSS/APPNAME");

var newScema = new mongoose.Schema({
	var: Type,
	var: Type,
	var: Type
	var: {
		type: mongoose.Schema.Type.ObjectId,
		ref: ""
	}
}

//to render items that are by id...
Model.findById(Id).populate("VariableToPopulate").exec(callback(err,returnedData));

var Entry = mongoose.model("Entry Name(in singular form)", newSchema);

Entry.find({"parameterToSubmit":"value"},callback(err,returnedEntry));
Entry.create({ObjectToSubmit},callback(err,returnedEntry));
Entry.findById(req.params.id,callback(err,returnedEntry));


REST:
maps between HTTP routes and CRUD

Create	/newBlogPost
Read	/allBlogs
Update  /updateBlog/:id
Destroy /destroyBlog/:id

Name      Path            HTTP Verb       Purpose                                        Mongoose method
-------+---------------+--------------+-------------------------------------------------+------------------------
Index  | /dogs         |  GET         | list all dogs                                   |Dogs.find()
New    | /dogs/new     |  GET         | show new dog form                               |none
Create | /dogs         |  POST        | Create a new dog, then redirect somewhere       |Dog.create();
Show   | /dogs/:id     |  GET         | Show info about one specific dog                |Dog.findById()
Edit   | /dogs/:id/edit|  GET         | Show edit for for one dog                       |Dog.findById()
Update | /dogs/:id     |  PUT         | Update a particular dog, then redirect somewhere|Dog.findByIdAndUpdate()
Destroy| /dogs/:id     |  DELETE      | Delete a particular dog, then redirect somewhere|Dog.findByIdAndRemove()

method-override:
methodOverride = require("method-override")
app.use(methodOverride("_method"))
form action="/ROUTE/:IDVAL/?_method=PUT"

